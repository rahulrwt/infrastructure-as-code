name: Continuous Integration
on:
  push:
    branches:
      - main

env:
  APP_NAME: trailAndtale

permissions:
  contents: write # Required to push tags
  pull-requests: read
jobs:
  release:
    name: Build, Release & Upload to S3
    runs-on: ubuntu-latest
    env:
      RELEASE_ARTIFACT_BUCKET: ${{ secrets.RELEASE_ARTIFACT_BUCKET }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for semantic-release to analyze commit history
          persist-credentials: true # Required to push tags
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install NPM Dependencies
        run: npm install
      
      - name: Execute semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run semantic-release and store the output
          npx semantic-release | tee release_output.txt
          # Check if a new release was published
          if grep -q "Published release" release_output.txt; then
            echo "NEW_RELEASE_PUBLISHED=true" >> $GITHUB_ENV
            # Extract version from release output
            VERSION=$(grep -oP "Published release \K[0-9]+\.[0-9]+\.[0-9]+" release_output.txt || echo "1.0.0")
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "New version: $VERSION"
          else
            echo "No new release published"
            exit 1
          fi
      
      - name: Update Maven Project Version
        run: mvn versions:set -DnewVersion=${{ env.VERSION }} -DgenerateBackupPoms=false
      
      - name: Build JAR with Production Profile
        run: ./mvnw clean verify -Pprod
      
      - name: Rename JAR with Release Version
        run: mv target/*.jar target/${{ env.APP_NAME }}.${{ env.VERSION }}.jar
      
      - name: Upload File to S3
        run: aws s3 cp "target/${{ env.APP_NAME }}.${{ env.VERSION }}.jar" "s3://$RELEASE_ARTIFACT_BUCKET/${{ env.APP_NAME }}.${{ env.VERSION }}.jar"
