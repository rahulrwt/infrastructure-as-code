name: Branch CI

on:
  push:
    branches:
      - '*'  # This will match all branches
      - '!main'

env:
  APP_NAME: trailAndTale

jobs:
  check_commit_message:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check commit message
        id: check
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ "${COMMIT_MSG,,}" == *"run build"* ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  release:
    name: Build, Release & Upload to S3
    needs: check_commit_message
    if: needs.check_commit_message.outputs.should_build == 'true'
    runs-on: ubuntu-latest
    env:
      RELEASE_ARTIFACT_BUCKET: ${{ secrets.RELEASE_ARTIFACT_BUCKET }}
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Extract and sanitize branch name
        id: extract_branch
        run: |
          BRANCH="${GITHUB_REF##*/}"
          # Replace slashes or unsafe characters in branch name with hyphens
          SAFE_BRANCH=$(echo "$BRANCH" | tr '/\_' '-' | tr -cd '[:alnum:]-')
          echo "BRANCH=$SAFE_BRANCH" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install NPM Dependencies
        run: npm install
      
      - name: Execute semantic-release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.tag_name' | sed 's/^v//')
          if [[ "$VERSION" == "null" || -z "$VERSION" ]]; then
            VERSION="0.1.0"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Update Maven Project Version
        run: mvn versions:set -DnewVersion="${{ env.VERSION }}-${{ env.BRANCH }}" -DgenerateBackupPoms=false
      
      - name: Build JAR with Production Profile
        run: ./mvnw clean verify -Pprod
      
      - name: Rename JAR with Branch Name
        run: mv target/*.jar target/${{ env.APP_NAME }}.${{ env.VERSION }}-${{ env.BRANCH }}.jar
      
      - name: Upload File to S3
        run: aws s3 cp "target/${{ env.APP_NAME }}.${{ env.VERSION }}-${{ env.BRANCH }}.jar" "s3://$RELEASE_ARTIFACT_BUCKET/${{ env.APP_NAME }}.${{ env.VERSION }}-${{ env.BRANCH }}.jar"
